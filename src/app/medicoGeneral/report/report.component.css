#chartDiv {
    width: 90vw;
    height: 50vh;

  }
  canvas{
    
    margin-right: auto;
    margin-left: auto;
}
  /* mat-sidenav-content{
    width: 100vw;
    height: 90vh;
  } */
.btn2{
    position: fixed;
  bottom: 0;
  left: 0;
}

.btn{
  position: fixed;
bottom: 0;
right: 0;
}
.imagen{
  display: none;

}

  @media print {

    mat-toolbar{
      visibility: hidden;
    }
    button{
      visibility: hidden;
    }


    #chartDiv, #chartDiv * {
        margin-right: auto;
        margin-left: auto;
        /* width: 80vw;
        height: 50vh; */
        
      }

      .imagen{
        display: block;
    
      }
    /* body * {
      visibility: hidden;
    }
    #chartDiv, #chartDiv * {
      visibility: visible;
      
    }
    #chartDiv {
      position: absolute;
      left: 0;
      top: 0;
    } */
  }


  

table {
  width: 80%;
  margin-left: auto;
  margin-right: auto;
}

.mat-form-field {
  font-size: 14px;
  width: 100%;
}

td, th {
  width: 25%;
}

.example-container {
  width: 100%;
  height: 100%;
  border: 1px solid #555;
}

.sidebarClase{
  width: 250px;
}

.mat-card{
  height: 100%;
}



.example-is-mobile .example-toolbar {
  position: fixed;
  /* Make sure the toolbar will stay on top of the content as it scrolls past. */
  z-index: 2;
}

h1.example-app-name {
  margin-left: 8px;
}

.example-sidenav-container {
  /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This
     causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */
  flex: 1;
}

.example-is-mobile .example-sidenav-container {
  /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the
     `<body>` to be our scrolling element for mobile layouts. */
  flex: 1 0 auto;
}
mat-sidenav{
width: 15%;
}

.active{
  background-color: rgb(102, 102, 102);
}